<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.surge.system.repository.SysUserMapper">

	<resultMap type="SysUser" id="SysUserResult">
		<id     property="id"       column="id"      />
		<result property="username"     column="username"    />
		<result property="realname"     column="realname"    />
        <result property="type"     column="type"    />
		<result property="email"        column="email"        />
		<result property="phone"  column="phone"  />
		<result property="sex"          column="sex"          />
		<result property="avatar"       column="avatar"       />
		<result property="password"     column="password"     />
		<result property="status"       column="status"       />
		<result property="delFlag"      column="del_flag"     />
		<result property="loginIp"      column="login_ip"     />
		<result property="loginDate"    column="login_date"   />
		<result property="createBy"     column="create_by"    />
		<result property="createTime"   column="create_time"  />
		<result property="updateBy"     column="update_by"    />
		<result property="updateTime"   column="update_time"  />
		<result property="remark"       column="remark"       />
		<collection property="orgs"    javaType="java.util.List"  resultMap="OrgResult" />
		<collection  property="roles"   javaType="java.util.List"   resultMap="RoleResult" />
	</resultMap>

	<resultMap id="OrgResult" type="SysOrg">
		<id     property="id"   column="org_id"     />
		<result property="pid" column="org_pid"   />
		<result property="name" column="org_name"   />
        <result property="ancestors" column="org_ancestors"  />
        <result property="sort" column="org_sort"   />
		<result property="status"   column="org_status" />
		<result property="delFlag"   column="org_del_flag" />
	</resultMap>

	<resultMap id="RoleResult" type="SysRole">
		<id     property="id"       column="role_id"        />
		<result property="name"     column="role_name"      />
		<result property="code"      column="role_code"       />
		<result property="sort"     column="role_sort"      />
		<result property="status"       column="role_status"    />
		<result property="delFlag"      column="role_del_flag"    />
	</resultMap>

    <sql id="selectUserVo">
		SELECT
			u.ID,
			u.username,
			u.realname,
			u.TYPE,
			u.email,
			u.avatar,
			u.phone,
			u.PASSWORD,
			u.sex,
			u.status,
			u.del_flag,
			u.login_ip,
			u.login_date,
			u.create_by,
			u.create_time,
			u.remark,
			o.ID AS org_id,
			o.pid AS org_pid,
			o.NAME AS org_name,
			o.ancestors AS org_ancestors,
			o.sort AS org_sort,
			o.status AS org_status,
			o.del_flag AS org_del_flag,
			r.ID AS role_id,
			r.NAME AS role_name,
			r.code AS role_code,
			r.sort AS role_sort,
			r.status AS role_status,
			r.del_flag AS role_del_flag
		FROM
			nc_sys.sys_user u
				LEFT JOIN nc_sys.sys_user_org suo ON u.ID = suo.user_id
				LEFT JOIN nc_sys.sys_org o ON o.ID = suo.org_id
				LEFT JOIN nc_sys.sys_user_role sur ON u.ID = sur.user_id
				LEFT JOIN nc_sys.sys_role r ON r.ID = sur.role_id
    </sql>

    <select id="selectPageUserList" resultMap="SysUserResult">
        select distinct u.id, u.username, u.realname, u.phone, u.email, u.avatar, u.sex,
        u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.update_by, u.update_time, u.remark from
			nc_sys.sys_user u
        left join nc_sys.sys_user_org suo on u.id = suo.user_id
        ${ew.getCustomSqlSegment}
    </select>

    <select id="selectUserList" resultMap="SysUserResult">
		select u.id, u.dept_id, u.nick_name, u.username, u.email, u.avatar, u.phone, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.name, d.leader
		from nc_sys.sys_user u
		left join nc_sys.sys_dept d on u.dept_id = d.id
        ${ew.getCustomSqlSegment}
	</select>

	<select id="selectAllocatedList" resultMap="SysUserResult">
	    select distinct u.id, u.dept_id, u.username, u.nick_name, u.email, u.phone, u.status, u.create_time
	    from nc_sys.sys_user u
			 left join nc_sys.sys_dept d on u.dept_id = d.id
			 left join nc_sys.sys_user_role sur on u.id = sur.user_id
			 left join nc_sys.sys_role r on r.role_id = sur.role_id
        ${ew.getCustomSqlSegment}
	</select>

	<select id="selectUnallocatedList" resultMap="SysUserResult">
	    select distinct u.id, u.dept_id, u.username, u.nick_name, u.email, u.phone, u.status, u.create_time
	    from nc_sys.sys_user u
			 left join nc_sys.sys_dept d on u.dept_id = d.id
			 left join nc_sys.sys_user_role sur on u.id = sur.user_id
			 left join nc_sys.sys_role r on r.role_id = sur.role_id
        ${ew.getCustomSqlSegment}
	</select>

	<select id="selectByUserId" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.del_flag = '0' and u.id = #{userId}
	</select>

	<select id="selectByUsername" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.del_flag = '0' and u.username = #{userName}
	</select>

    <select id="selectUserByPhonenumber" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.phone = #{phone}
    </select>

    <select id="selectUserByEmail" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.del_flag = '0' and u.email = #{email}
    </select>



</mapper>
